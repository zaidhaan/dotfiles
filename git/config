[include]
    # contains [user]: email + name
    # not really that sensitive but it can get annoying seeing someone's
    # name/details pop up all over their dotfiles
    path = config.local

[init]
    defaultBranch = master

[pager]
    branch = false

[alias]
    # e.g. M file.txt
    s = status --short
    # e.g. ## master...origin/master [ahead 1]
    ss = status --short --branch

    # e.g. * 312f56 foo bar baz
    l = log --pretty=oneline -n 20 --graph --abbrev-commit
    # with no limit
    fl = log --pretty=oneline --graph --abbrev-commit

    # e.g. * 2148ef bing bang bong (Fri May 12 01:23:45 2023 +0800) <John Doe>
    ll = log --graph -n 20 --pretty=sexy
    # with no limit
    fll = log --graph --pretty=sexy

    # clone + recurse submodules
    c = clone --recursive

    # back / switch
    b = switch -

    # shallow clone
    sc = clone --depth=1

    # use tmux to view diff on left and commit on right
    adhd = ! gitadhd $GIT_DIR $GIT_WORK_TREE

    # add
    a = add
    # pull remote + submodules
    p = ! git pull ; git submodule foreach git pull origin master

    cam = commit --all -m

    # updating + rewording
    amend = commit --amend

    # minor changes
    recommit = commit --amend --no-edit
    update = commit --amend --no-edit

    # staged changes
    staged = diff --cached

    # rebase nth latest commits
    reb = !" r() { git rebase -i HEAD~$1; }; r"

    # from: https://github.com/jessfraz/dotfiles/blob/02e62f/.gitconfig

    # TODO: figure out how to properly autocomplete this
    # find branches containing commit
    fb = "!f() { : git show ; git branch -a --contains $1; }; f"

    # find tags containing commit
    ft = "!f() { git describe --always --contains $1; }; f"

    # find commits by source code
    fc = "!f() { git log --pretty=serious --decorate --date=short -S\"$1\"; }; f"

    # find commits by commit message
    fm = "!f() { git log --pretty=serious --decorate --date=short --grep=\"$1\"; }; f"

    # Remove branches that have already been merged with master (a.k.a. "delete merged")
    dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d; git remote -v update -p"

    # diff | delta
    # unstaged
    dd = !"f() { git diff $@ | delta; }; f"
    # staged
    ddc = !"f() { git diff --cached $@ | delta; }; f"
    # cmp curr with prev commit
    ddp = !" git diff HEAD^! | delta"

    pushall = !" git remote | xargs -L1 git push --all"

    sl = shortlog
    sls = shortlog --summary --numbered

    top = ! git log --format=format:\"%an <%ae>\" | sort | uniq -c | sort -nr | head -n 20

    cp = cherry-pick
    cv = cherry -v

    iw = instaweb
    iws = instaweb stop


    # don't ask why
    yolo = ! git add -A && git commit -m \"$(curl -fsSL https://whatthecommit.com/index.txt)\"

    # again... no questions
    smth = ! git commit -m \"$(curl -fsSL https://whatthecommit.com/index.txt)\"

    alias=! git config -l | grep ^alias | cut -c 7- | sort

[core]
    pager = less -F -X

[pretty]
    # more emphasis on commit message
    sexy = "format:%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset"

    # more emphasis on commit hash and date
    serious = "format:%C(yellow)%h    %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d"

[instaweb]
    local = true

    # just a random port nobody uses
    port = 8180

[url "git@github.com:"]
    pushInsteadOf = "https://github.com/"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
